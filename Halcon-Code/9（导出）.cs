//
// File generated by HDevelop for HALCON/.NET (C#) Version 19.11.0.0
// Non-ASCII strings in this file are encoded in local-8-bit encoding (cp936).
// 
// Please note that non-ASCII characters in string constants are exported
// as octal codes in order to guarantee that the strings are correctly
// created on all systems, independent on any compiler settings.
// 
// Source files with different encoding should not be mixed in one project.
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
  public HDevelopExport()
  {
    // Default settings used in HDevelop
    HOperatorSet.SetSystem("width", 512);
    HOperatorSet.SetSystem("height", 512);
    if (HalconAPI.isWindows)
      HOperatorSet.SetSystem("use_window_thread","true");
    action();
  }
#endif

  // Procedures 
  // Local procedures 
  public void gen_buttom_edge (HObject ho_Image, HTuple hv_CenterRow, HTuple hv_CenterCol, 
      HTuple hv_BaseRectDistRow, HTuple hv_BaseRectDistCol, HTuple hv_BasePhi, HTuple hv_ImageWidth, 
      HTuple hv_ImageHeight, HTuple hv_RotatePhi, HTuple hv_RectBasePhi, HTuple hv_MinCircleColumn, 
      HTuple hv_MaxCircleColumn, out HTuple hv_ButtomEdgeRowBegin, out HTuple hv_ButtomEdgeColBegin, 
      out HTuple hv_ButtomEdgeRowEnd, out HTuple hv_ButtomEdgeColEnd)
  {




    // Local iconic variables 

    HObject ho_Rectangle1, ho_Rectangle2, ho_RectButtomMeasureRectionAffineTrans1=null;
    HObject ho_ButtomMeasureRectRegionAffineTrans2=null, ho_Contours;
    HObject ho_ButtomEdgeContour;

    // Local control variables 

    HTuple hv_HomMat2D5 = new HTuple(), hv_RectButtomMeasureRectArea = new HTuple();
    HTuple hv_RectButtomMeasureRectRow1 = new HTuple(), hv_RectButtomMeasureRectColumn1 = new HTuple();
    HTuple hv_RectButtomMeasureRectPhi1 = new HTuple(), hv_MeasureHandle5 = new HTuple();
    HTuple hv_HomMat2D6 = new HTuple(), hv_ButtomMeasureRectArea = new HTuple();
    HTuple hv_ButtomMeasureRectRow2 = new HTuple(), hv_ButtomMeasureRectColumn2 = new HTuple();
    HTuple hv_ButtomMeasureRectPhi2 = new HTuple(), hv_MeasureHandle6 = new HTuple();
    HTuple hv_ButtomAmplitude = new HTuple(), hv_ButtomDistance = new HTuple();
    HTuple hv_ButtomMetrologyHandle = new HTuple(), hv_Index = new HTuple();
    HTuple hv_ButtomEdgeRows = new HTuple(), hv_ButtomEdgeColumns = new HTuple();
    HTuple hv_Nr = new HTuple(), hv_Nc = new HTuple(), hv_Dist = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    HOperatorSet.GenEmptyObj(out ho_Rectangle2);
    HOperatorSet.GenEmptyObj(out ho_RectButtomMeasureRectionAffineTrans1);
    HOperatorSet.GenEmptyObj(out ho_ButtomMeasureRectRegionAffineTrans2);
    HOperatorSet.GenEmptyObj(out ho_Contours);
    HOperatorSet.GenEmptyObj(out ho_ButtomEdgeContour);
    hv_ButtomEdgeRowBegin = new HTuple();
    hv_ButtomEdgeColBegin = new HTuple();
    hv_ButtomEdgeRowEnd = new HTuple();
    hv_ButtomEdgeColEnd = new HTuple();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle1.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle1, hv_CenterRow+hv_BaseRectDistRow, 
        hv_CenterCol-hv_BaseRectDistCol, hv_RectBasePhi, 70, 50);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle2.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle2, hv_CenterRow+hv_BaseRectDistRow, 
        hv_CenterCol+hv_BaseRectDistCol, hv_RectBasePhi, 70, 50);
    }

    if ((int)(new HTuple(hv_MaxCircleColumn.TupleGreater(hv_MinCircleColumn))) != 0)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_HomMat2D5.Dispose();
      HOperatorSet.VectorAngleToRigid(hv_CenterRow, hv_CenterCol, -hv_RectBasePhi, 
          hv_CenterRow, hv_CenterCol, hv_BasePhi+hv_RotatePhi, out hv_HomMat2D5);
      }
      ho_RectButtomMeasureRectionAffineTrans1.Dispose();
      HOperatorSet.AffineTransRegion(ho_Rectangle1, out ho_RectButtomMeasureRectionAffineTrans1, 
          hv_HomMat2D5, "nearest_neighbor");
      hv_RectButtomMeasureRectArea.Dispose();hv_RectButtomMeasureRectRow1.Dispose();hv_RectButtomMeasureRectColumn1.Dispose();
      HOperatorSet.AreaCenter(ho_RectButtomMeasureRectionAffineTrans1, out hv_RectButtomMeasureRectArea, 
          out hv_RectButtomMeasureRectRow1, out hv_RectButtomMeasureRectColumn1);
      hv_RectButtomMeasureRectPhi1.Dispose();
      HOperatorSet.OrientationRegion(ho_RectButtomMeasureRectionAffineTrans1, out hv_RectButtomMeasureRectPhi1);
      hv_MeasureHandle5.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_RectButtomMeasureRectRow1, hv_RectButtomMeasureRectColumn1, 
          hv_RectButtomMeasureRectPhi1, 70, 2, hv_ImageWidth, hv_ImageHeight, "bicubic", 
          out hv_MeasureHandle5);

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_HomMat2D6.Dispose();
      HOperatorSet.VectorAngleToRigid(hv_CenterRow, hv_CenterCol, -hv_RectBasePhi, 
          hv_CenterRow, hv_CenterCol, hv_BasePhi+hv_RotatePhi, out hv_HomMat2D6);
      }
      ho_ButtomMeasureRectRegionAffineTrans2.Dispose();
      HOperatorSet.AffineTransRegion(ho_Rectangle2, out ho_ButtomMeasureRectRegionAffineTrans2, 
          hv_HomMat2D6, "nearest_neighbor");
      hv_ButtomMeasureRectArea.Dispose();hv_ButtomMeasureRectRow2.Dispose();hv_ButtomMeasureRectColumn2.Dispose();
      HOperatorSet.AreaCenter(ho_ButtomMeasureRectRegionAffineTrans2, out hv_ButtomMeasureRectArea, 
          out hv_ButtomMeasureRectRow2, out hv_ButtomMeasureRectColumn2);
      hv_ButtomMeasureRectPhi2.Dispose();
      HOperatorSet.OrientationRegion(ho_ButtomMeasureRectRegionAffineTrans2, out hv_ButtomMeasureRectPhi2);
      hv_MeasureHandle6.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_ButtomMeasureRectRow2, hv_ButtomMeasureRectColumn2, 
          hv_ButtomMeasureRectPhi2, 70, 2, hv_ImageWidth, hv_ImageHeight, "bicubic", 
          out hv_MeasureHandle6);

    }
    else
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_HomMat2D5.Dispose();
      HOperatorSet.VectorAngleToRigid(hv_CenterRow, hv_CenterCol, -hv_RectBasePhi, 
          hv_CenterRow, hv_CenterCol, hv_BasePhi-hv_RotatePhi, out hv_HomMat2D5);
      }
      ho_RectButtomMeasureRectionAffineTrans1.Dispose();
      HOperatorSet.AffineTransRegion(ho_Rectangle1, out ho_RectButtomMeasureRectionAffineTrans1, 
          hv_HomMat2D5, "nearest_neighbor");
      hv_RectButtomMeasureRectArea.Dispose();hv_RectButtomMeasureRectRow1.Dispose();hv_RectButtomMeasureRectColumn1.Dispose();
      HOperatorSet.AreaCenter(ho_RectButtomMeasureRectionAffineTrans1, out hv_RectButtomMeasureRectArea, 
          out hv_RectButtomMeasureRectRow1, out hv_RectButtomMeasureRectColumn1);
      hv_RectButtomMeasureRectPhi1.Dispose();
      HOperatorSet.OrientationRegion(ho_RectButtomMeasureRectionAffineTrans1, out hv_RectButtomMeasureRectPhi1);
      hv_MeasureHandle5.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_RectButtomMeasureRectRow1, hv_RectButtomMeasureRectColumn1, 
          hv_RectButtomMeasureRectPhi1, 70, 2, hv_ImageWidth, hv_ImageHeight, "bicubic", 
          out hv_MeasureHandle5);

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_HomMat2D6.Dispose();
      HOperatorSet.VectorAngleToRigid(hv_CenterRow, hv_CenterCol, -hv_RectBasePhi, 
          hv_CenterRow, hv_CenterCol, hv_BasePhi-hv_RotatePhi, out hv_HomMat2D6);
      }
      ho_ButtomMeasureRectRegionAffineTrans2.Dispose();
      HOperatorSet.AffineTransRegion(ho_Rectangle2, out ho_ButtomMeasureRectRegionAffineTrans2, 
          hv_HomMat2D6, "nearest_neighbor");
      hv_ButtomMeasureRectArea.Dispose();hv_ButtomMeasureRectRow2.Dispose();hv_ButtomMeasureRectColumn2.Dispose();
      HOperatorSet.AreaCenter(ho_ButtomMeasureRectRegionAffineTrans2, out hv_ButtomMeasureRectArea, 
          out hv_ButtomMeasureRectRow2, out hv_ButtomMeasureRectColumn2);
      hv_ButtomMeasureRectPhi2.Dispose();
      HOperatorSet.OrientationRegion(ho_ButtomMeasureRectRegionAffineTrans2, out hv_ButtomMeasureRectPhi2);
      hv_MeasureHandle6.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_ButtomMeasureRectRow2, hv_ButtomMeasureRectColumn2, 
          hv_ButtomMeasureRectPhi2, 70, 2, hv_ImageWidth, hv_ImageHeight, "bicubic", 
          out hv_MeasureHandle6);

    }
    //抓取底部边缘
    hv_ButtomEdgeRowBegin.Dispose();hv_ButtomEdgeColBegin.Dispose();hv_ButtomAmplitude.Dispose();hv_ButtomDistance.Dispose();
    HOperatorSet.MeasurePos(ho_Image, hv_MeasureHandle5, 5, 50, "all", "all", out hv_ButtomEdgeRowBegin, 
        out hv_ButtomEdgeColBegin, out hv_ButtomAmplitude, out hv_ButtomDistance);
    hv_ButtomEdgeRowEnd.Dispose();hv_ButtomEdgeColEnd.Dispose();hv_ButtomAmplitude.Dispose();hv_ButtomDistance.Dispose();
    HOperatorSet.MeasurePos(ho_Image, hv_MeasureHandle6, 5, 50, "all", "all", out hv_ButtomEdgeRowEnd, 
        out hv_ButtomEdgeColEnd, out hv_ButtomAmplitude, out hv_ButtomDistance);

    HOperatorSet.CloseMeasure(hv_MeasureHandle5);
    HOperatorSet.CloseMeasure(hv_MeasureHandle6);

    //拟合底部边缘
    hv_ButtomMetrologyHandle.Dispose();
    HOperatorSet.CreateMetrologyModel(out hv_ButtomMetrologyHandle);
    hv_Index.Dispose();
    HOperatorSet.AddMetrologyObjectLineMeasure(hv_ButtomMetrologyHandle, hv_ButtomEdgeRowBegin, 
        hv_ButtomEdgeColBegin, hv_ButtomEdgeRowEnd, hv_ButtomEdgeColEnd, 100, 100, 
        2, 50, new HTuple(), new HTuple(), out hv_Index);
    HOperatorSet.ApplyMetrologyModel(ho_Image, hv_ButtomMetrologyHandle);
    ho_Contours.Dispose();hv_ButtomEdgeRows.Dispose();hv_ButtomEdgeColumns.Dispose();
    HOperatorSet.GetMetrologyObjectMeasures(out ho_Contours, hv_ButtomMetrologyHandle, 
        "all", "all", out hv_ButtomEdgeRows, out hv_ButtomEdgeColumns);
    ho_ButtomEdgeContour.Dispose();
    HOperatorSet.GenContourPolygonXld(out ho_ButtomEdgeContour, hv_ButtomEdgeRows, 
        hv_ButtomEdgeColumns);
    hv_ButtomEdgeRowBegin.Dispose();hv_ButtomEdgeColBegin.Dispose();hv_ButtomEdgeRowEnd.Dispose();hv_ButtomEdgeColEnd.Dispose();hv_Nr.Dispose();hv_Nc.Dispose();hv_Dist.Dispose();
    HOperatorSet.FitLineContourXld(ho_ButtomEdgeContour, "huber", -1, 0, 5, 4, out hv_ButtomEdgeRowBegin, 
        out hv_ButtomEdgeColBegin, out hv_ButtomEdgeRowEnd, out hv_ButtomEdgeColEnd, 
        out hv_Nr, out hv_Nc, out hv_Dist);


    ho_Rectangle1.Dispose();
    ho_Rectangle2.Dispose();
    ho_RectButtomMeasureRectionAffineTrans1.Dispose();
    ho_ButtomMeasureRectRegionAffineTrans2.Dispose();
    ho_Contours.Dispose();
    ho_ButtomEdgeContour.Dispose();

    hv_HomMat2D5.Dispose();
    hv_RectButtomMeasureRectArea.Dispose();
    hv_RectButtomMeasureRectRow1.Dispose();
    hv_RectButtomMeasureRectColumn1.Dispose();
    hv_RectButtomMeasureRectPhi1.Dispose();
    hv_MeasureHandle5.Dispose();
    hv_HomMat2D6.Dispose();
    hv_ButtomMeasureRectArea.Dispose();
    hv_ButtomMeasureRectRow2.Dispose();
    hv_ButtomMeasureRectColumn2.Dispose();
    hv_ButtomMeasureRectPhi2.Dispose();
    hv_MeasureHandle6.Dispose();
    hv_ButtomAmplitude.Dispose();
    hv_ButtomDistance.Dispose();
    hv_ButtomMetrologyHandle.Dispose();
    hv_Index.Dispose();
    hv_ButtomEdgeRows.Dispose();
    hv_ButtomEdgeColumns.Dispose();
    hv_Nr.Dispose();
    hv_Nc.Dispose();
    hv_Dist.Dispose();

    return;
  }

  public void gen_FitPoint (HObject ho_Image, out HObject ho_Circle1, HTuple hv_Origin_Row_InImg, 
      HTuple hv_Origin_Column_InImg, HTuple hv_TwoCirclePhi, HTuple hv_p_XOffest, 
      HTuple hv_p_YOffest, HTuple hv_MaxCircleColumn, HTuple hv_MinCircleColumn, HTuple hv_MaxCircleRow, 
      HTuple hv_Width, HTuple hv_Height, out HTuple hv_p_x, out HTuple hv_p_y, out HTuple hv_p_x_fit, 
      out HTuple hv_p_y_fit)
  {




    // Local iconic variables 

    // Local control variables 

    HTuple hv_HomMat2D_Img2Base = new HTuple();
    HTuple hv_Origin_Column_InBase = new HTuple(), hv_Origin_Row_InBase = new HTuple();
    HTuple hv_p_XInBase = new HTuple(), hv_p_YInBase = new HTuple();
    HTuple hv_HomMat2D_Base2Img = new HTuple(), hv_MeasureRectPhi1 = new HTuple();
    HTuple hv_MeasureHandle1 = new HTuple(), hv_Amplitude = new HTuple();
    HTuple hv_Distance = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Circle1);
    hv_p_x = new HTuple();
    hv_p_y = new HTuple();
    hv_p_x_fit = new HTuple();
    hv_p_y_fit = new HTuple();
    //计算图像坐标系到基准坐标系的变换矩阵
    hv_HomMat2D_Img2Base.Dispose();
    HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Origin_Row_InImg, hv_Origin_Column_InImg, 
        hv_TwoCirclePhi, out hv_HomMat2D_Img2Base);
    //将图像坐标系下的基准点转换到基准坐标系下
    hv_Origin_Column_InBase.Dispose();hv_Origin_Row_InBase.Dispose();
    HOperatorSet.AffineTransPoint2d(hv_HomMat2D_Img2Base, hv_Origin_Column_InImg, 
        hv_Origin_Row_InImg, out hv_Origin_Column_InBase, out hv_Origin_Row_InBase);
    //在基准坐标系下对基准点进行偏移找拟合点
    if ((int)(new HTuple(hv_MaxCircleColumn.TupleLess(hv_MinCircleColumn))) != 0)
    {
      hv_p_XInBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_p_XInBase = hv_Origin_Column_InBase-hv_p_XOffest;
      }
      hv_p_YInBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_p_YInBase = hv_Origin_Row_InBase-hv_p_YOffest;
      }
    }
    else
    {
      hv_p_XInBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_p_XInBase = hv_Origin_Column_InBase+hv_p_XOffest;
      }
      hv_p_YInBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_p_YInBase = hv_Origin_Row_InBase+hv_p_YOffest;
      }
    }

    //计算基准坐标系到图像坐标系下的变换矩阵
    hv_HomMat2D_Base2Img.Dispose();
    HOperatorSet.HomMat2dInvert(hv_HomMat2D_Img2Base, out hv_HomMat2D_Base2Img);
    //将基准坐标系下的拟合点转换到图像坐标系下
    hv_p_x_fit.Dispose();hv_p_y_fit.Dispose();
    HOperatorSet.AffineTransPoint2d(hv_HomMat2D_Base2Img, hv_p_XInBase, hv_p_YInBase, 
        out hv_p_x_fit, out hv_p_y_fit);

    //**********如采用边缘点则取消注释*******************
    //p_x := p_x_fit
    //p_y := p_y_fit
    //**************************************************


    //**********如直接采用手册标记点则取消注释*******************
    hv_MeasureRectPhi1.Dispose();
    HOperatorSet.LineOrientation(hv_MaxCircleRow, hv_MaxCircleColumn, hv_p_y_fit, 
        hv_p_x_fit, out hv_MeasureRectPhi1);
    hv_MeasureHandle1.Dispose();
    HOperatorSet.GenMeasureRectangle2(hv_p_y_fit, hv_p_x_fit, hv_MeasureRectPhi1, 
        30, 2, hv_Width, hv_Height, "bicubic", out hv_MeasureHandle1);
    hv_p_y.Dispose();hv_p_x.Dispose();hv_Amplitude.Dispose();hv_Distance.Dispose();
    HOperatorSet.MeasurePos(ho_Image, hv_MeasureHandle1, 1.5, 50, "all", "all", out hv_p_y, 
        out hv_p_x, out hv_Amplitude, out hv_Distance);
    HOperatorSet.CloseMeasure(hv_MeasureHandle1);
    //*********************************************************
    ho_Circle1.Dispose();
    HOperatorSet.GenCircle(out ho_Circle1, hv_p_y, hv_p_x, 10);

    hv_HomMat2D_Img2Base.Dispose();
    hv_Origin_Column_InBase.Dispose();
    hv_Origin_Row_InBase.Dispose();
    hv_p_XInBase.Dispose();
    hv_p_YInBase.Dispose();
    hv_HomMat2D_Base2Img.Dispose();
    hv_MeasureRectPhi1.Dispose();
    hv_MeasureHandle1.Dispose();
    hv_Amplitude.Dispose();
    hv_Distance.Dispose();

    return;
  }

  public void gen_right_edge (HObject ho_Image, HTuple hv_CenterRow, HTuple hv_CenterColumn, 
      HTuple hv_BaseRectDistRow, HTuple hv_BaseRectDistColumn, HTuple hv_MaxCircleColumn, 
      HTuple hv_BasePhi, HTuple hv_ImageWidth, HTuple hv_ImageHeight, HTuple hv_RotatePhi, 
      HTuple hv_BaseRectPhi, out HTuple hv_RightEdgeRowBegin, out HTuple hv_RightEdgeColBegin, 
      out HTuple hv_RightEdgeRowEnd, out HTuple hv_RightEdgeColEnd)
  {




    // Local iconic variables 

    HObject ho_Rectangle1, ho_Rectangle2, ho_RightMeasureRectionAffineTrans1=null;
    HObject ho_RightMeasureRectionAffineTrans2=null, ho_Contours;
    HObject ho_RightEdgeContour;

    // Local control variables 

    HTuple hv_HomMat2D7 = new HTuple(), hv_RightMeasureRectArea = new HTuple();
    HTuple hv_RightMeasureRectRow1 = new HTuple(), hv_RightMeasureRectColumn1 = new HTuple();
    HTuple hv_RightMeasureRectPhi1 = new HTuple(), hv_MeasureHandle7 = new HTuple();
    HTuple hv_RightMeasureRectRow2 = new HTuple(), hv_RightMeasureRectColumn2 = new HTuple();
    HTuple hv_RightMeasureRectPhi2 = new HTuple(), hv_MeasureHandle8 = new HTuple();
    HTuple hv_RightAmplitude = new HTuple(), hv_RightDistance = new HTuple();
    HTuple hv_RightMetrologyHandle = new HTuple(), hv_Index = new HTuple();
    HTuple hv_RightEdgeRows = new HTuple(), hv_RightEdgeColumns = new HTuple();
    HTuple hv_Nr = new HTuple(), hv_Nc = new HTuple(), hv_Dist = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    HOperatorSet.GenEmptyObj(out ho_Rectangle2);
    HOperatorSet.GenEmptyObj(out ho_RightMeasureRectionAffineTrans1);
    HOperatorSet.GenEmptyObj(out ho_RightMeasureRectionAffineTrans2);
    HOperatorSet.GenEmptyObj(out ho_Contours);
    HOperatorSet.GenEmptyObj(out ho_RightEdgeContour);
    hv_RightEdgeRowBegin = new HTuple();
    hv_RightEdgeColBegin = new HTuple();
    hv_RightEdgeRowEnd = new HTuple();
    hv_RightEdgeColEnd = new HTuple();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle1.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle1, hv_CenterRow-hv_BaseRectDistRow, 
        hv_CenterColumn+hv_BaseRectDistColumn, hv_BaseRectPhi, 70, 50);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle2.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle2, hv_CenterRow+hv_BaseRectDistRow, 
        hv_CenterColumn+hv_BaseRectDistColumn, hv_BaseRectPhi, 70, 50);
    }

    if ((int)(new HTuple(hv_MaxCircleColumn.TupleGreater(hv_CenterColumn))) != 0)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_HomMat2D7.Dispose();
      HOperatorSet.VectorAngleToRigid(hv_CenterRow, hv_CenterColumn, hv_BaseRectPhi, 
          hv_CenterRow, hv_CenterColumn, hv_BasePhi+((new HTuple(180)).TupleRad()
          ), out hv_HomMat2D7);
      }
      ho_RightMeasureRectionAffineTrans1.Dispose();
      HOperatorSet.AffineTransRegion(ho_Rectangle1, out ho_RightMeasureRectionAffineTrans1, 
          hv_HomMat2D7, "nearest_neighbor");
      hv_RightMeasureRectArea.Dispose();hv_RightMeasureRectRow1.Dispose();hv_RightMeasureRectColumn1.Dispose();
      HOperatorSet.AreaCenter(ho_RightMeasureRectionAffineTrans1, out hv_RightMeasureRectArea, 
          out hv_RightMeasureRectRow1, out hv_RightMeasureRectColumn1);
      hv_RightMeasureRectPhi1.Dispose();
      HOperatorSet.OrientationRegion(ho_RightMeasureRectionAffineTrans1, out hv_RightMeasureRectPhi1);
      hv_MeasureHandle7.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_RightMeasureRectRow1, hv_RightMeasureRectColumn1, 
          hv_RightMeasureRectPhi1, 70, 2, hv_ImageWidth, hv_ImageHeight, "bicubic", 
          out hv_MeasureHandle7);

      ho_RightMeasureRectionAffineTrans2.Dispose();
      HOperatorSet.AffineTransRegion(ho_Rectangle2, out ho_RightMeasureRectionAffineTrans2, 
          hv_HomMat2D7, "nearest_neighbor");
      hv_RightMeasureRectArea.Dispose();hv_RightMeasureRectRow2.Dispose();hv_RightMeasureRectColumn2.Dispose();
      HOperatorSet.AreaCenter(ho_RightMeasureRectionAffineTrans2, out hv_RightMeasureRectArea, 
          out hv_RightMeasureRectRow2, out hv_RightMeasureRectColumn2);
      hv_RightMeasureRectPhi2.Dispose();
      HOperatorSet.OrientationRegion(ho_RightMeasureRectionAffineTrans2, out hv_RightMeasureRectPhi2);
      hv_MeasureHandle8.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_RightMeasureRectRow2, hv_RightMeasureRectColumn2, 
          hv_RightMeasureRectPhi2, 70, 2, hv_ImageWidth, hv_ImageHeight, "bicubic", 
          out hv_MeasureHandle8);

    }
    else
    {
      hv_HomMat2D7.Dispose();
      HOperatorSet.VectorAngleToRigid(hv_CenterRow, hv_CenterColumn, hv_BaseRectPhi, 
          hv_CenterRow, hv_CenterColumn, hv_BasePhi, out hv_HomMat2D7);
      ho_RightMeasureRectionAffineTrans1.Dispose();
      HOperatorSet.AffineTransRegion(ho_Rectangle1, out ho_RightMeasureRectionAffineTrans1, 
          hv_HomMat2D7, "nearest_neighbor");
      hv_RightMeasureRectArea.Dispose();hv_RightMeasureRectRow1.Dispose();hv_RightMeasureRectColumn1.Dispose();
      HOperatorSet.AreaCenter(ho_RightMeasureRectionAffineTrans1, out hv_RightMeasureRectArea, 
          out hv_RightMeasureRectRow1, out hv_RightMeasureRectColumn1);
      hv_RightMeasureRectPhi1.Dispose();
      HOperatorSet.OrientationRegion(ho_RightMeasureRectionAffineTrans1, out hv_RightMeasureRectPhi1);
      hv_MeasureHandle7.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_RightMeasureRectRow1, hv_RightMeasureRectColumn1, 
          hv_RightMeasureRectPhi1, 70, 2, hv_ImageWidth, hv_ImageHeight, "bicubic", 
          out hv_MeasureHandle7);

      ho_RightMeasureRectionAffineTrans2.Dispose();
      HOperatorSet.AffineTransRegion(ho_Rectangle2, out ho_RightMeasureRectionAffineTrans2, 
          hv_HomMat2D7, "nearest_neighbor");
      hv_RightMeasureRectArea.Dispose();hv_RightMeasureRectRow2.Dispose();hv_RightMeasureRectColumn2.Dispose();
      HOperatorSet.AreaCenter(ho_RightMeasureRectionAffineTrans2, out hv_RightMeasureRectArea, 
          out hv_RightMeasureRectRow2, out hv_RightMeasureRectColumn2);
      hv_RightMeasureRectPhi2.Dispose();
      HOperatorSet.OrientationRegion(ho_RightMeasureRectionAffineTrans2, out hv_RightMeasureRectPhi2);
      hv_MeasureHandle8.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_RightMeasureRectRow2, hv_RightMeasureRectColumn2, 
          hv_RightMeasureRectPhi2, 70, 2, hv_ImageWidth, hv_ImageHeight, "bicubic", 
          out hv_MeasureHandle8);

    }
    //抓取右侧边缘
    hv_RightEdgeRowBegin.Dispose();hv_RightEdgeColBegin.Dispose();hv_RightAmplitude.Dispose();hv_RightDistance.Dispose();
    HOperatorSet.MeasurePos(ho_Image, hv_MeasureHandle7, 5, 50, "all", "all", out hv_RightEdgeRowBegin, 
        out hv_RightEdgeColBegin, out hv_RightAmplitude, out hv_RightDistance);
    hv_RightEdgeRowEnd.Dispose();hv_RightEdgeColEnd.Dispose();hv_RightAmplitude.Dispose();hv_RightDistance.Dispose();
    HOperatorSet.MeasurePos(ho_Image, hv_MeasureHandle8, 5, 50, "all", "all", out hv_RightEdgeRowEnd, 
        out hv_RightEdgeColEnd, out hv_RightAmplitude, out hv_RightDistance);

    HOperatorSet.CloseMeasure(hv_MeasureHandle7);
    HOperatorSet.CloseMeasure(hv_MeasureHandle8);

    //拟合右侧边缘
    hv_RightMetrologyHandle.Dispose();
    HOperatorSet.CreateMetrologyModel(out hv_RightMetrologyHandle);
    hv_Index.Dispose();
    HOperatorSet.AddMetrologyObjectLineMeasure(hv_RightMetrologyHandle, hv_RightEdgeRowBegin, 
        hv_RightEdgeColBegin, hv_RightEdgeRowEnd, hv_RightEdgeColEnd, 100, 100, 2, 
        50, new HTuple(), new HTuple(), out hv_Index);
    HOperatorSet.ApplyMetrologyModel(ho_Image, hv_RightMetrologyHandle);
    ho_Contours.Dispose();hv_RightEdgeRows.Dispose();hv_RightEdgeColumns.Dispose();
    HOperatorSet.GetMetrologyObjectMeasures(out ho_Contours, hv_RightMetrologyHandle, 
        "all", "all", out hv_RightEdgeRows, out hv_RightEdgeColumns);
    ho_RightEdgeContour.Dispose();
    HOperatorSet.GenContourPolygonXld(out ho_RightEdgeContour, hv_RightEdgeRows, 
        hv_RightEdgeColumns);
    hv_RightEdgeRowBegin.Dispose();hv_RightEdgeColBegin.Dispose();hv_RightEdgeRowEnd.Dispose();hv_RightEdgeColEnd.Dispose();hv_Nr.Dispose();hv_Nc.Dispose();hv_Dist.Dispose();
    HOperatorSet.FitLineContourXld(ho_RightEdgeContour, "huber", -1, 0, 5, 4, out hv_RightEdgeRowBegin, 
        out hv_RightEdgeColBegin, out hv_RightEdgeRowEnd, out hv_RightEdgeColEnd, 
        out hv_Nr, out hv_Nc, out hv_Dist);

    ho_Rectangle1.Dispose();
    ho_Rectangle2.Dispose();
    ho_RightMeasureRectionAffineTrans1.Dispose();
    ho_RightMeasureRectionAffineTrans2.Dispose();
    ho_Contours.Dispose();
    ho_RightEdgeContour.Dispose();

    hv_HomMat2D7.Dispose();
    hv_RightMeasureRectArea.Dispose();
    hv_RightMeasureRectRow1.Dispose();
    hv_RightMeasureRectColumn1.Dispose();
    hv_RightMeasureRectPhi1.Dispose();
    hv_MeasureHandle7.Dispose();
    hv_RightMeasureRectRow2.Dispose();
    hv_RightMeasureRectColumn2.Dispose();
    hv_RightMeasureRectPhi2.Dispose();
    hv_MeasureHandle8.Dispose();
    hv_RightAmplitude.Dispose();
    hv_RightDistance.Dispose();
    hv_RightMetrologyHandle.Dispose();
    hv_Index.Dispose();
    hv_RightEdgeRows.Dispose();
    hv_RightEdgeColumns.Dispose();
    hv_Nr.Dispose();
    hv_Nc.Dispose();
    hv_Dist.Dispose();

    return;
  }

  public void gen_TwoCircle_info (HObject ho_Image, out HTuple hv_MaxCircleRow, out HTuple hv_MaxCircleColumn, 
      out HTuple hv_MaxCircleRadius, out HTuple hv_MinCircleRow, out HTuple hv_MinCircleColumn, 
      out HTuple hv_MinCircleRadius, out HTuple hv_TwoCirclePhi)
  {



    // Local iconic variables 

    HObject ho_Border, ho_MinCircleContour, ho_MaxCircleContour;

    // Local control variables 

    HTuple hv_StartPhi = new HTuple(), hv_EndPhi = new HTuple();
    HTuple hv_PointOrder = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Border);
    HOperatorSet.GenEmptyObj(out ho_MinCircleContour);
    HOperatorSet.GenEmptyObj(out ho_MaxCircleContour);
    hv_MaxCircleRow = new HTuple();
    hv_MaxCircleColumn = new HTuple();
    hv_MaxCircleRadius = new HTuple();
    hv_MinCircleRow = new HTuple();
    hv_MinCircleColumn = new HTuple();
    hv_MinCircleRadius = new HTuple();
    hv_TwoCirclePhi = new HTuple();
    //fast_threshold (Image, Regions, 128, 255, 20)
    //connection (Regions, ConnectedRegions)
    //提取两个圆形区域
    //select_shape (ConnectedRegions, MinCircleSelectedRegions, ['area','circularity'], 'and', [467889.91,0.95872], [743119.27,0.98991])
    //select_shape (ConnectedRegions, MaxCircleSelectedRegions, ['area','circularity'], 'and', [743119.27,0.72202], [1073394.50,0.77523])
    //smallest_circle (MaxCircleSelectedRegions, MaxCircleRow, MaxCircleColumn, MaxCircleRadius)
    //smallest_circle (MinCircleSelectedRegions, MinCircleRow, MinCircleColumn, MinCircleRadius)
    //求两圆心连线方向
    //line_orientation (MaxCircleRow, MaxCircleColumn, MinCircleRow, MinCircleColumn, TwoCirclePhi)



    ho_Border.Dispose();
    HOperatorSet.ThresholdSubPix(ho_Image, out ho_Border, 128);
    ho_MinCircleContour.Dispose();
    HOperatorSet.SelectShapeXld(ho_Border, out ho_MinCircleContour, "area", "and", 
        463303, 766055);
    hv_MinCircleRow.Dispose();hv_MinCircleColumn.Dispose();hv_MinCircleRadius.Dispose();hv_StartPhi.Dispose();hv_EndPhi.Dispose();hv_PointOrder.Dispose();
    HOperatorSet.FitCircleContourXld(ho_MinCircleContour, "algebraic", -1, 0, 0, 
        3, 2, out hv_MinCircleRow, out hv_MinCircleColumn, out hv_MinCircleRadius, 
        out hv_StartPhi, out hv_EndPhi, out hv_PointOrder);
    ho_MaxCircleContour.Dispose();
    HOperatorSet.SelectShapeXld(ho_Border, out ho_MaxCircleContour, "area", "and", 
        738532, 1.03211e+06);
    hv_MaxCircleRow.Dispose();hv_MaxCircleColumn.Dispose();hv_MaxCircleRadius.Dispose();hv_StartPhi.Dispose();hv_EndPhi.Dispose();hv_PointOrder.Dispose();
    HOperatorSet.FitCircleContourXld(ho_MaxCircleContour, "algebraic", -1, 0, 0, 
        3, 2, out hv_MaxCircleRow, out hv_MaxCircleColumn, out hv_MaxCircleRadius, 
        out hv_StartPhi, out hv_EndPhi, out hv_PointOrder);
    hv_TwoCirclePhi.Dispose();
    HOperatorSet.LineOrientation(hv_MaxCircleRow, hv_MaxCircleColumn, hv_MinCircleRow, 
        hv_MinCircleColumn, out hv_TwoCirclePhi);

    ho_Border.Dispose();
    ho_MinCircleContour.Dispose();
    ho_MaxCircleContour.Dispose();

    hv_StartPhi.Dispose();
    hv_EndPhi.Dispose();
    hv_PointOrder.Dispose();

    return;
  }

#if !NO_EXPORT_MAIN
  // Main procedure 
  private void action()
  {


    // Local iconic variables 

    HObject ho_Image, ho_Circle1, ho_Circle2, ho_Circle3;
    HObject ho_Circle4, ho_EdgeContour, ho_EdgeCircle;

    // Local control variables 

    HTuple hv_PixclRealDis = new HTuple(), hv_p1_XOffest = new HTuple();
    HTuple hv_p1_YOffest = new HTuple(), hv_p2_XOffest = new HTuple();
    HTuple hv_p2_YOffest = new HTuple(), hv_p3_XOffest = new HTuple();
    HTuple hv_p3_YOffest = new HTuple(), hv_p4_XOffest = new HTuple();
    HTuple hv_p4_YOffest = new HTuple(), hv_Width = new HTuple();
    HTuple hv_Height = new HTuple(), hv_StartTime = new HTuple();
    HTuple hv_MaxCircleRow = new HTuple(), hv_MaxCircleColumn = new HTuple();
    HTuple hv_MaxCircleRadius = new HTuple(), hv_MinCircleRow = new HTuple();
    HTuple hv_MinCircleColumn = new HTuple(), hv_MinCircleRadius = new HTuple();
    HTuple hv_TwoCirclePhi = new HTuple(), hv_ButtomEdgeRowBegin = new HTuple();
    HTuple hv_ButtomEdgeColBegin = new HTuple(), hv_ButtomEdgeRowEnd = new HTuple();
    HTuple hv_ButtomEdgeColEnd = new HTuple(), hv_RightEdgeRowBegin = new HTuple();
    HTuple hv_RightEdgeColBegin = new HTuple(), hv_RightEdgeRowEnd = new HTuple();
    HTuple hv_RightEdgeColEnd = new HTuple(), hv_Origin_Row_InImg = new HTuple();
    HTuple hv_Origin_Column_InImg = new HTuple(), hv_IsOverlapping = new HTuple();
    HTuple hv_p1_x = new HTuple(), hv_p1_y = new HTuple();
    HTuple hv_p1_x_fit = new HTuple(), hv_p1_y_fit = new HTuple();
    HTuple hv_p2_x = new HTuple(), hv_p2_y = new HTuple();
    HTuple hv_p2_x_fit = new HTuple(), hv_p2_y_fit = new HTuple();
    HTuple hv_p3_x = new HTuple(), hv_p3_y = new HTuple();
    HTuple hv_p3_x_fit = new HTuple(), hv_p3_y_fit = new HTuple();
    HTuple hv_p4_x = new HTuple(), hv_p4_y = new HTuple();
    HTuple hv_p4_x_fit = new HTuple(), hv_p4_y_fit = new HTuple();
    HTuple hv_EdgeCircleCenterRow = new HTuple(), hv_EdgeCircleCenterCol = new HTuple();
    HTuple hv_EdgeCircleCenterRadius = new HTuple(), hv_StartPhi = new HTuple();
    HTuple hv_EndPhi = new HTuple(), hv_PointOrder = new HTuple();
    HTuple hv_X1 = new HTuple(), hv_Y1 = new HTuple(), hv_StopTime = new HTuple();
    HTuple hv_CircleRadiu = new HTuple(), hv_PositionDegree = new HTuple();
    HTuple hv_runtime = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Image);
    HOperatorSet.GenEmptyObj(out ho_Circle1);
    HOperatorSet.GenEmptyObj(out ho_Circle2);
    HOperatorSet.GenEmptyObj(out ho_Circle3);
    HOperatorSet.GenEmptyObj(out ho_Circle4);
    HOperatorSet.GenEmptyObj(out ho_EdgeContour);
    HOperatorSet.GenEmptyObj(out ho_EdgeCircle);
    //计算一像素对应的实际距离（mm）
    hv_PixclRealDis.Dispose();
    hv_PixclRealDis = 0.00952380952;
    hv_p1_XOffest.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_p1_XOffest = 22.820/hv_PixclRealDis;
    }
    hv_p1_YOffest.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_p1_YOffest = 3.312/hv_PixclRealDis;
    }

    hv_p2_XOffest.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_p2_XOffest = 16.390/hv_PixclRealDis;
    }
    hv_p2_YOffest.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_p2_YOffest = 3.312/hv_PixclRealDis;
    }

    hv_p3_XOffest.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_p3_XOffest = 16.390/hv_PixclRealDis;
    }
    hv_p3_YOffest.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_p3_YOffest = 10.264/hv_PixclRealDis;
    }

    hv_p4_XOffest.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_p4_XOffest = 22.820/hv_PixclRealDis;
    }
    hv_p4_YOffest.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_p4_YOffest = 10.264/hv_PixclRealDis;
    }

    //获取图像尺寸
    ho_Image.Dispose();
    HOperatorSet.ReadImage(out ho_Image, "//mac/Home/Desktop/VirtualProject/Data/BackLight_ALL/Image_20200911144053015.bmp");
    hv_Width.Dispose();hv_Height.Dispose();
    HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);
    hv_StartTime.Dispose();
    HOperatorSet.CountSeconds(out hv_StartTime);
    //定位两圆心
    hv_MaxCircleRow.Dispose();hv_MaxCircleColumn.Dispose();hv_MaxCircleRadius.Dispose();hv_MinCircleRow.Dispose();hv_MinCircleColumn.Dispose();hv_MinCircleRadius.Dispose();hv_TwoCirclePhi.Dispose();
    gen_TwoCircle_info(ho_Image, out hv_MaxCircleRow, out hv_MaxCircleColumn, out hv_MaxCircleRadius, 
        out hv_MinCircleRow, out hv_MinCircleColumn, out hv_MinCircleRadius, out hv_TwoCirclePhi);
    //获取底部边缘
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ButtomEdgeRowBegin.Dispose();hv_ButtomEdgeColBegin.Dispose();hv_ButtomEdgeRowEnd.Dispose();hv_ButtomEdgeColEnd.Dispose();
    gen_buttom_edge(ho_Image, hv_MaxCircleRow, hv_MaxCircleColumn, (hv_MaxCircleRadius*4)/3, 
        (hv_MaxCircleRadius*3)/4, hv_TwoCirclePhi, hv_Width, hv_Height, (new HTuple(90)).TupleRad()
        , (new HTuple(90)).TupleRad(), hv_MinCircleColumn, hv_MaxCircleColumn, out hv_ButtomEdgeRowBegin, 
        out hv_ButtomEdgeColBegin, out hv_ButtomEdgeRowEnd, out hv_ButtomEdgeColEnd);
    }
    //获取右侧边缘
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_RightEdgeRowBegin.Dispose();hv_RightEdgeColBegin.Dispose();hv_RightEdgeRowEnd.Dispose();hv_RightEdgeColEnd.Dispose();
    gen_right_edge(ho_Image, hv_MinCircleRow, hv_MinCircleColumn, (hv_MinCircleRadius*7)/7, 
        (hv_MinCircleRadius*9)/7, hv_MaxCircleColumn, hv_TwoCirclePhi, hv_Width, 
        hv_Height, (new HTuple(180)).TupleRad(), 0, out hv_RightEdgeRowBegin, out hv_RightEdgeColBegin, 
        out hv_RightEdgeRowEnd, out hv_RightEdgeColEnd);
    }
    //求底部边缘和右侧边缘交点，即坐标原点
    hv_Origin_Row_InImg.Dispose();hv_Origin_Column_InImg.Dispose();hv_IsOverlapping.Dispose();
    HOperatorSet.IntersectionLines(hv_ButtomEdgeRowBegin, hv_ButtomEdgeColBegin, 
        hv_ButtomEdgeRowEnd, hv_ButtomEdgeColEnd, hv_RightEdgeRowBegin, hv_RightEdgeColBegin, 
        hv_RightEdgeRowEnd, hv_RightEdgeColEnd, out hv_Origin_Row_InImg, out hv_Origin_Column_InImg, 
        out hv_IsOverlapping);
    //求取4个拟合点
    ho_Circle1.Dispose();hv_p1_x.Dispose();hv_p1_y.Dispose();hv_p1_x_fit.Dispose();hv_p1_y_fit.Dispose();
    gen_FitPoint(ho_Image, out ho_Circle1, hv_Origin_Row_InImg, hv_Origin_Column_InImg, 
        hv_TwoCirclePhi, hv_p1_XOffest, hv_p1_YOffest, hv_MaxCircleColumn, hv_MinCircleColumn, 
        hv_MaxCircleRow, hv_Width, hv_Height, out hv_p1_x, out hv_p1_y, out hv_p1_x_fit, 
        out hv_p1_y_fit);
    ho_Circle2.Dispose();hv_p2_x.Dispose();hv_p2_y.Dispose();hv_p2_x_fit.Dispose();hv_p2_y_fit.Dispose();
    gen_FitPoint(ho_Image, out ho_Circle2, hv_Origin_Row_InImg, hv_Origin_Column_InImg, 
        hv_TwoCirclePhi, hv_p2_XOffest, hv_p2_YOffest, hv_MaxCircleColumn, hv_MinCircleColumn, 
        hv_MaxCircleRow, hv_Width, hv_Height, out hv_p2_x, out hv_p2_y, out hv_p2_x_fit, 
        out hv_p2_y_fit);
    ho_Circle3.Dispose();hv_p3_x.Dispose();hv_p3_y.Dispose();hv_p3_x_fit.Dispose();hv_p3_y_fit.Dispose();
    gen_FitPoint(ho_Image, out ho_Circle3, hv_Origin_Row_InImg, hv_Origin_Column_InImg, 
        hv_TwoCirclePhi, hv_p3_XOffest, hv_p3_YOffest, hv_MaxCircleColumn, hv_MinCircleColumn, 
        hv_MaxCircleRow, hv_Width, hv_Height, out hv_p3_x, out hv_p3_y, out hv_p3_x_fit, 
        out hv_p3_y_fit);
    ho_Circle4.Dispose();hv_p4_x.Dispose();hv_p4_y.Dispose();hv_p4_x_fit.Dispose();hv_p4_y_fit.Dispose();
    gen_FitPoint(ho_Image, out ho_Circle4, hv_Origin_Row_InImg, hv_Origin_Column_InImg, 
        hv_TwoCirclePhi, hv_p4_XOffest, hv_p4_YOffest, hv_MaxCircleColumn, hv_MinCircleColumn, 
        hv_MaxCircleRow, hv_Width, hv_Height, out hv_p4_x, out hv_p4_y, out hv_p4_x_fit, 
        out hv_p4_y_fit);
    //利用4个边缘点生成点多边形轮廓，并拟合成圆
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_EdgeContour.Dispose();
    HOperatorSet.GenContourPolygonXld(out ho_EdgeContour, ((((hv_p1_y.TupleConcat(
        hv_p2_y))).TupleConcat(hv_p3_y))).TupleConcat(hv_p4_y), ((((hv_p1_x.TupleConcat(
        hv_p2_x))).TupleConcat(hv_p3_x))).TupleConcat(hv_p4_x));
    }
    hv_EdgeCircleCenterRow.Dispose();hv_EdgeCircleCenterCol.Dispose();hv_EdgeCircleCenterRadius.Dispose();hv_StartPhi.Dispose();hv_EndPhi.Dispose();hv_PointOrder.Dispose();
    HOperatorSet.FitCircleContourXld(ho_EdgeContour, "ahuber", -1, 0, 0, 3, 1, out hv_EdgeCircleCenterRow, 
        out hv_EdgeCircleCenterCol, out hv_EdgeCircleCenterRadius, out hv_StartPhi, 
        out hv_EndPhi, out hv_PointOrder);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_EdgeCircle.Dispose();
    HOperatorSet.GenCircleContourXld(out ho_EdgeCircle, hv_EdgeCircleCenterRow, hv_EdgeCircleCenterCol, 
        hv_EdgeCircleCenterRadius, 0, (new HTuple(360)).TupleRad(), "positive", 1);
    }
    //计算X1
    hv_X1.Dispose();
    HOperatorSet.DistancePl(hv_EdgeCircleCenterRow, hv_EdgeCircleCenterCol, hv_RightEdgeRowBegin, 
        hv_RightEdgeColBegin, hv_RightEdgeRowEnd, hv_RightEdgeColEnd, out hv_X1);
    //计算Y1
    hv_Y1.Dispose();
    HOperatorSet.DistancePl(hv_EdgeCircleCenterRow, hv_EdgeCircleCenterCol, hv_ButtomEdgeRowBegin, 
        hv_ButtomEdgeColBegin, hv_ButtomEdgeRowEnd, hv_ButtomEdgeColEnd, out hv_Y1);
    //计算运行时间
    hv_StopTime.Dispose();
    HOperatorSet.CountSeconds(out hv_StopTime);
    //输出结果
    hv_CircleRadiu.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_CircleRadiu = (hv_EdgeCircleCenterRadius*2)*hv_PixclRealDis;
    }
    hv_PositionDegree.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_PositionDegree = 2*(((((((hv_X1*hv_PixclRealDis)-19.605)).TuplePow(
        2))+((((hv_Y1*hv_PixclRealDis)-6.788)).TuplePow(2)))).TupleSqrt());
    }
    hv_runtime.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_runtime = (hv_StopTime-hv_StartTime)*1000;
    }

    ho_Image.Dispose();
    ho_Circle1.Dispose();
    ho_Circle2.Dispose();
    ho_Circle3.Dispose();
    ho_Circle4.Dispose();
    ho_EdgeContour.Dispose();
    ho_EdgeCircle.Dispose();

    hv_PixclRealDis.Dispose();
    hv_p1_XOffest.Dispose();
    hv_p1_YOffest.Dispose();
    hv_p2_XOffest.Dispose();
    hv_p2_YOffest.Dispose();
    hv_p3_XOffest.Dispose();
    hv_p3_YOffest.Dispose();
    hv_p4_XOffest.Dispose();
    hv_p4_YOffest.Dispose();
    hv_Width.Dispose();
    hv_Height.Dispose();
    hv_StartTime.Dispose();
    hv_MaxCircleRow.Dispose();
    hv_MaxCircleColumn.Dispose();
    hv_MaxCircleRadius.Dispose();
    hv_MinCircleRow.Dispose();
    hv_MinCircleColumn.Dispose();
    hv_MinCircleRadius.Dispose();
    hv_TwoCirclePhi.Dispose();
    hv_ButtomEdgeRowBegin.Dispose();
    hv_ButtomEdgeColBegin.Dispose();
    hv_ButtomEdgeRowEnd.Dispose();
    hv_ButtomEdgeColEnd.Dispose();
    hv_RightEdgeRowBegin.Dispose();
    hv_RightEdgeColBegin.Dispose();
    hv_RightEdgeRowEnd.Dispose();
    hv_RightEdgeColEnd.Dispose();
    hv_Origin_Row_InImg.Dispose();
    hv_Origin_Column_InImg.Dispose();
    hv_IsOverlapping.Dispose();
    hv_p1_x.Dispose();
    hv_p1_y.Dispose();
    hv_p1_x_fit.Dispose();
    hv_p1_y_fit.Dispose();
    hv_p2_x.Dispose();
    hv_p2_y.Dispose();
    hv_p2_x_fit.Dispose();
    hv_p2_y_fit.Dispose();
    hv_p3_x.Dispose();
    hv_p3_y.Dispose();
    hv_p3_x_fit.Dispose();
    hv_p3_y_fit.Dispose();
    hv_p4_x.Dispose();
    hv_p4_y.Dispose();
    hv_p4_x_fit.Dispose();
    hv_p4_y_fit.Dispose();
    hv_EdgeCircleCenterRow.Dispose();
    hv_EdgeCircleCenterCol.Dispose();
    hv_EdgeCircleCenterRadius.Dispose();
    hv_StartPhi.Dispose();
    hv_EndPhi.Dispose();
    hv_PointOrder.Dispose();
    hv_X1.Dispose();
    hv_Y1.Dispose();
    hv_StopTime.Dispose();
    hv_CircleRadiu.Dispose();
    hv_PositionDegree.Dispose();
    hv_runtime.Dispose();

  }

#endif


}
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

