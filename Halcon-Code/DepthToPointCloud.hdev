<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="19.11.0.0">
<procedure name="main">
<interface/>
<body>
<c>*深度图像转点云图像 参考Demo</c>
<c>*By Criss </c>
<c>*2020/02/13 22:37</c>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 512, 512, 'black', WindowHandle1)</l>
<l>dev_get_window (WindowHandle)</l>
<l>ImageDir:='Image'</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">read_image (ImageZ, '//mac/Home/Desktop/VirtualProject/Data/3d-Image/forward.tif')</l>
<l>get_image_size (ImageZ, Width, Height)</l>
<c></c>
<c>*读取已经均匀化后的深度图像</c>
<c>*生成XY图像,间隔为1</c>
<l>gen_image_surface_first_order (ImageX, 'uint2', 0, 1, 0, 0, 0, Width, Height)</l>
<l>gen_image_surface_first_order (ImageY, 'uint2', 1, 0, 0, 0, 0, Width, Height)</l>
<c></c>
<l>convert_image_type (ImageX, ImageConvertedX, 'real')</l>
<l>convert_image_type (ImageY, ImageConvertedY, 'real')</l>
<l>convert_image_type (ImageZ, ImageConvertedZ, 'real')</l>
<c></c>
<c>*拉伸到0以上</c>
<l>min_max_gray (ImageConvertedZ, ImageConvertedZ, 0, Min, Max, Range)</l>
<l>if(Min&lt;0.0)</l>
<l>    scale_image (ImageConvertedZ, ImageConvertedZ, 1.0, 0 - Min)</l>
<l>endif</l>
<c></c>
<l>scale_image (ImageConvertedZ, ImageScaled, 0.164156, -5076)</l>
<l>threshold (ImageScaled, Regions, 155.34, 233.01)</l>
<l>opening_rectangle1 (Regions, RegionOpening, 11, 11)</l>
<l>connection (RegionOpening, ConnectedRegions)</l>
<l>select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 160550, 876147)</l>
<l>union1 (SelectedRegions, RegionUnion)</l>
<l>reduce_domain (ImageConvertedZ, RegionUnion, ImageReduced)</l>
<c></c>
<c>*设置Z方向缩放系数,最终高度 = ScaleZ * GrayValue值，ScaleZ越小高度值范围也越小，点云效果接近平面，反之越明显</c>
<c>*确保在0值以上，可通过min_max_gray获取最小值然后拉伸到0以上</c>
<l>ScaleZ:=0.02</l>
<l>scale_image (ImageConvertedZ, ImageReducedZ1, -ScaleZ,0)</l>
<c></c>
<l>xyz_to_object_model_3d (ImageConvertedX, ImageConvertedY, ImageReducedZ1, ObjectModel3D)</l>
<l>Instructions[0] := '旋转: 鼠标左键'</l>
<l>Instructions[1] := '缩放: Shift + 鼠标左键'</l>
<l>Instructions[2] := '移动: Ctrl  + 鼠标左键'</l>
<l>visualize_object_model_3d (WindowHandle, ObjectModel3D, [], [], ['lut','intensity','disp_pose'], ['color1','coord_z','true'], ['深度图转点云图'], 'Label', Instructions, PoseOut)</l>
<l>stop()</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="Go2GenTL_CoordinateXYZ">
<interface>
<io>
<par name="heightMap" base_type="iconic" dimension="0"/>
</io>
<ic>
<par name="rowIdx" base_type="ctrl" dimension="0"/>
<par name="columnIdx" base_type="ctrl" dimension="0"/>
<par name="xOffset" base_type="ctrl" dimension="0"/>
<par name="yOffset" base_type="ctrl" dimension="0"/>
<par name="zOffset" base_type="ctrl" dimension="0"/>
<par name="xResolution" base_type="ctrl" dimension="0"/>
<par name="yResolution" base_type="ctrl" dimension="0"/>
<par name="zResolution" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="coordinateXYZ" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* real-world coordinate = value * resolution + offset. The result is in mm</c>
<c>* </c>
<l>coordinateXYZ[0] := (columnIdx * xResolution + xOffset)</l>
<c>* Ignore yOffset to get distance relative to the beginning of the part.</c>
<c>* Include yOffset to get absolute distance</c>
<l>coordinateXYZ[1] := (rowIdx * yResolution + yOffset)</l>
<l>* coordinateXYZ[1] := (rowIdx * yResolution)</l>
<l>tuple_round (columnIdx, columnInteger)</l>
<l>tuple_round (rowIdx, rowInteger)</l>
<l>get_grayval (heightMap, rowInteger, columnInteger, heightValue)</l>
<l>coordinateXYZ[2] := (heightValue * zResolution + zOffset)</l>
<l>return ()</l>
</body>
<docu id="Go2GenTL_CoordinateXYZ">
<parameters>
<parameter id="columnIdx"/>
<parameter id="coordinateXYZ"/>
<parameter id="heightMap"/>
<parameter id="rowIdx"/>
<parameter id="xOffset"/>
<parameter id="xResolution"/>
<parameter id="yOffset"/>
<parameter id="yResolution"/>
<parameter id="zOffset"/>
<parameter id="zResolution"/>
</parameters>
</docu>
</procedure>
<procedure name="gen_point_image_by_seq">
<interface>
<oo>
<par name="ImageX" base_type="iconic" dimension="0"/>
<par name="ImageY" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="Width" base_type="ctrl" dimension="0"/>
<par name="Height" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>gen_image_const (ImageX, 'uint2', Width, Height)</l>
<l>gen_image_const (ImageY, 'uint2', Width, Height)</l>
<l>for Row:=0 to Height-1 by 1</l>
<l>    for Col:=0 to Width-1 by 1</l>
<l>        set_grayval (ImageX, Row, Col, Col)</l>
<l>        set_grayval (ImageY, Row, Col, Row)</l>
<l>    endfor</l>
<l>endfor</l>
<l>return ()</l>
</body>
<docu id="gen_point_image_by_seq">
<parameters>
<parameter id="Height"/>
<parameter id="ImageX"/>
<parameter id="ImageY"/>
<parameter id="Width"/>
</parameters>
</docu>
</procedure>
</hdevelop>
